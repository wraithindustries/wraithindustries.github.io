---
// DarkModeToggle.astro
---

<button
  id="dark-mode-toggle"
  type="button"
  aria-label="Toggle dark mode"
  class="fixed bottom-6 right-6 z-50 inline-flex items-center justify-center p-3 rounded-full shadow-lg bg-white dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white border border-gray-200 dark:border-gray-700 transition-all duration-200"
>
  <!-- Sun icon (visible in dark mode) -->
  <svg
    id="theme-toggle-light-icon"
    class="hidden w-6 h-6"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      fill-rule="evenodd"
      clip-rule="evenodd"></path>
  </svg>

  <!-- Moon icon (visible in light mode) -->
  <svg
    id="theme-toggle-dark-icon"
    class="w-6 h-6"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
  </svg>
</button>

<script>
  // Get theme from localStorage or system preference
  function getThemePreference() {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  }

  // Update theme icons
  function updateThemeIcons(isDark: boolean) {
    const lightIcon = document.getElementById("theme-toggle-light-icon");
    const darkIcon = document.getElementById("theme-toggle-dark-icon");

    if (lightIcon && darkIcon) {
      if (isDark) {
        lightIcon.classList.remove("hidden");
        darkIcon.classList.add("hidden");
      } else {
        lightIcon.classList.add("hidden");
        darkIcon.classList.remove("hidden");
      }
    }
  }

  // Apply theme to document
  function applyTheme(theme: string) {
    const isDark = theme === "dark";

    if (isDark) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }

    updateThemeIcons(isDark);
  }

  // Initialize theme on page load
  const theme = getThemePreference();
  applyTheme(theme);

  // Store theme preference
  if (typeof localStorage !== "undefined") {
    localStorage.setItem("theme", theme);
  }

  // Toggle theme on button click
  document.getElementById("dark-mode-toggle")?.addEventListener("click", () => {
    const isDark = document.documentElement.classList.contains("dark");
    const newTheme = isDark ? "light" : "dark";

    applyTheme(newTheme);

    if (typeof localStorage !== "undefined") {
      localStorage.setItem("theme", newTheme);
    }
  });

  // Listen for system theme changes
  window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
    // Only apply system theme if user hasn't set a preference
    if (typeof localStorage === "undefined" || !localStorage.getItem("theme")) {
      applyTheme(e.matches ? "dark" : "light");
    }
  });
</script>

<script is:inline>
  // This runs before the page renders to prevent flash
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  })();

  if (theme === "dark") {
    document.documentElement.classList.add("dark");
  }
</script>
